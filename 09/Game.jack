
class Game {
    field Board board;
    field PlayerGame playerGame;
    field Guard guard1;
    field Guard guard2;

    constructor Game new() {
        var int difficulty; // difficulty is defined from 1-3 
        do Screen.clearScreen();
        do openScreen();
        let difficulty = chooseDifficulty();

        let board = Board.new();
        let playerGame = PlayerGame.new();
        let guard1 = Guard.new(16, 16, 1); // starting points should be a devisor of 16
        let guard2 = Guard.new(192, 160, 2);
        return this;
    }

    method int chooseDifficulty() {
        var char key;
        while (true) {
            let key = Keyboard.keyPressed();
            if (key = 49) { return 1;} // if R is pressed -> RESTART
            if (key = 50) { return 2;}// if Q is pressed -> QUIT
            if (key = 51) { return 3;}// if Q is pressed -> QUIT
        }
        return 0;
    }


    method void run() {
        while (~playerGame.getExit()){
            do playerGame.runPlayer();
            if(gameOver()){
                do Sys.wait(1000);
                do messageGameOver();
                return;
            }
            do guard1.move();
            if(gameOver()){
                do Sys.wait(1000);
                do messageGameOver();
                return;
            }
            do guard2.move();
            if(win()) {
                do Sys.wait(1000);
                do messageWin();
                return;
            }
            if(gameOver()){
                do Sys.wait(1000);
                do messageGameOver();
                return;
            }
            }
        return;
    }

    method boolean win() {
        var boolean win;
        let win = guard1.canNotMove() & guard2.canNotMove();
        return win;
    }


    method boolean gameOver() {
        var boolean loose;
        let loose = (((playerGame.getX() = guard1.getX()) & (playerGame.getY()= guard1.getY())) 
                    | ((playerGame.getX() = guard2.getX()) & (playerGame.getY() = guard2.getY())));
        return loose;
    }

        /** 
        * Opening screen for the player to choose game difficulty.
        * Once the player hits difficulty (1-3) the game automatically starts.
        */
        method void openScreen() {
            var String message;
            do Screen.clearScreen();
            let message = String.new(60);

            do Output.moveCursor(5, 28);
            let message = "Welcome!";
            do Output.printString(message);
            
            do Output.moveCursor(8, 7);
            let message = "You are about to play the best game in the world";
            do Output.printString(message);
            
            do Output.moveCursor(11, 2);
            let message = "Choose difficulty between 1 - 3 using the keyboard numbers";
            do Output.printString(message);
            
            do Output.moveCursor(13, 16);
            let message = "After choosing game will start";
            do Output.printString(message);
            
            do Output.moveCursor(17, 27);
            let message = "Good Luck!";
            do Output.printString(message);
            
            do message.dispose();
            return;
        }


    /** If the player won (i.e. Guards do not have where to go to), the game is ended.
        Prints an informative message, disposes the game's objects, and disposes the game. */
        method void messageWin() {
            var String message;
            do Screen.clearScreen();
            let message = String.new(45);
            do Output.moveCursor(5, 12);
            let message = "Congratulations! You have won the game.";
            do Output.printString(message);
            do Output.moveCursor(7, 18);
            let message = "This game is a real fun, isn't  it?!";
            do Output.printString(message);
            do Output.moveCursor(11, 21);
            let message = "Come back soon!  : )";
            do Output.printString(message);
            do Output.moveCursor(15, 17);
            let message = "Press R to start a new game.";
            do Output.printString(message);
            do Output.moveCursor(17, 23);
            let message = "Press Q to quit.";
            do Output.printString(message);
            do message.dispose();
            return;
        }
    
        /** If the player lost (i.e. Guards caught player), the game is over.
            Prints an informative message, disposes the game's objects, and disposes the game. */
        method void messageGameOver() {
            var String message;
            do Screen.clearScreen();
            let message = String.new(40);
            do Output.moveCursor(5, 26);
            let message = "Game Over!";
            do Output.printString(message);
            do Output.moveCursor(7, 21);
            let message = "You were pretty good.";
            do Output.printString(message);
            do Output.moveCursor(9, 14);
            let message = "Next time you will do even better.";
            do Output.printString(message);
            do Output.moveCursor(11, 21);
            let message = "Come back soon!  : )";
            do Output.printString(message);
            do Output.moveCursor(15, 17);
            let message = "Press R to start a new game.";
            do Output.printString(message);
            do Output.moveCursor(17, 23);
            let message = "Press Q to quit.";
            do Output.printString(message);
            do message.dispose();
            return;
        }

    function boolean restart() {
        var char key;
        while (true) {
            let key = Keyboard.keyPressed();
            if (key = 82) { return true;} // if R is pressed -> RESTART
            if (key = 81) { return false;}// if Q is pressed -> QUIT
        }
        return true;
    }

    method void dispose() {
        do playerGame.dispose();
        do guard1.dispose();
        do guard2.dispose();
        do board.dispose();
        return;
    }
}