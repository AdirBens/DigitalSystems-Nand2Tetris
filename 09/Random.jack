/** 
* Class for generating random integers
*/

class Random {
    field int seed; //random seed
    field int calledTime;


    constructor Random new(int seedIn) {

        let seed = seedIn;
        let seed = rand();
        let calledTime = 0;

        return this;
    }

    /** 
    * return a random number in the range 0..32767 
    */

    method int rand() {

        let seed = seed + 20251;

        if (seed < 0) {
            let seed = seed - 32767 - 1;
        }

        return seed;
    }

    /** 
    * return a random number in the range 0..range 
    */

    method int randRange(int range) {
        var int mask;
        var int ret;

        let mask = 1;
        while (mask < range) {
            let mask = mask * 2 + 1;
        }

        let ret = rand() & mask;
        let calledTime = calledTime + 1;

        while (ret > range) {
            let ret = rand() & mask;
            let calledTime = calledTime + 1;
            let ret = ret & getShift();
        }

        return ret;
    }

    /** 
    * get new shift number according to called times
    */
    method int getShift() {
        var int temp;

        let calledTime = calledTime + 1;
        let temp = calledTime;
        
        while(temp > 9){

            let temp = temp - 9;

        }

        return temp;
    }


    method void addCallTime(int times){
        let calledTime = calledTime + times;
        return;

    }

    /** 
    * dispose object
    */
    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }



}